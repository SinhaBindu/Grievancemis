@using Grievancemis.Manager
@model Grievancemis.Models.FilterModel

@{
    ViewBag.Title = "Analytics";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
    ViewBag.SubTitle = "User Grievances List";
}

<div class="page-header">
    <div class="page-block">
        <div class="page-header-title">
            <h2 class="mb-0">User Grievances List</h2>
            <ul class="breadcrumb">
                <li class="breadcrumb-item"><a href="/">Home</a></li>
                @*<li class="breadcrumb-item"><a href="javascript: void(0)">Dashboard</a></li>*@
                <li class="breadcrumb-item" aria-current="page">@ViewBag.SubTitle</li>
            </ul>
        </div>
    </div>
</div>
<div class="grievances-list">
    <div class="box-design">
        @using (Html.BeginForm("GetUserGList", "UserCom", FormMethod.Post, new { @id = "formid", @class = "", role = "form", autocomplete = "off", enctype = "multipart/form-data", noValidate = "novalidate" }))
        {
            <div class="flex-row">
                <div class="form-group">
                    @Html.LabelFor(model => model.StateId, htmlAttributes: new { @class = "control-label" })
                    <span style="color:red;">*</span>
                    @Html.DropDownListFor(model => model.StateId, CommonModel.GetState(), null, new { @class = "form-control", @required = "required" })
                    @Html.ValidationMessageFor(model => model.StateId, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.TypeGId, htmlAttributes: new { @class = "control-label" })
                    <span style="color:red;">*</span>
                    @Html.DropDownListFor(model => model.TypeGId, CommonModel.GetGrievanceType(), null, new { @class = "form-control", @required = "required" })
                    @Html.ValidationMessageFor(model => model.TypeGId, "", new { @class = "text-danger" })
                </div>
                @*<div class="form-group">
                        @Html.LabelFor(model => model.EmailID, htmlAttributes: new { @class = "control-label" })
                        @Html.TextBoxFor(model => model.EmailID, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.EmailID, "", new { @class = "text-danger" })
                    </div>*@
                <div class="form-btn">
                    <button id="search-button" class="btn btn-primary">Search</button>
                </div>
            </div>
        }
    </div>

</div>
<div id="subdata"></div>

<div class="modal fade animate" id="progressModal" tabindex="-1" role="dialog" aria-labelledby="myLargeModalLabel" aria-hidden="true"
     data-backdrop="static" data-keyboard="false">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="progressModalLabel">Revert Process</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <i class="ti ti-x"></i>
                </button>
            </div>
            <div class="modal-body">
                <div class="row">
                    @Html.HiddenFor(x => x.GrievanceId_fk)
                    <div class="modal-design">
                        <p>
                            Name:
                            <span><strong id="cname"></strong></span>
                        </p>
                        <p>
                            Complain Date :
                            <span><strong id="con"></strong></span>
                        </p>
                        <p>
                            Case Id :
                            <span><strong id="CId"></strong></span>
                        </p>
                    </div>

                    <div class="form-group mar-bom">
                        @Html.LabelFor(model => model.RevertTypeId, htmlAttributes: new { @class = "control-label" })
                        @*<span style="color:red;">*</span>*@
                        @Html.DropDownListFor(model => model.RevertTypeId, CommonModel.GetRevertType(), null, new { @class = "form-control", @required = "required" })
                        @Html.ValidationMessageFor(model => model.RevertTypeId, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group mar-bom">
                        @Html.LabelFor(model => model.TeamRevertMessage, htmlAttributes: new { @class = "control-label col-md-2" })
                        @*<span style="color:red;">*</span>*@
                        <div class="col-md-10">
                            @Html.TextAreaFor(model => model.TeamRevertMessage, new { @class = "form-control-input", style = "height:100px;", rows = 5 })
                            @Html.ValidationMessageFor(model => model.TeamRevertMessage, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group mar-bom">
                        @Html.LabelFor(model => model.DocUpload, htmlAttributes: new { @class = "control-label col-md-2" })
                        <span style="color:red;">*</span>
                        <div class="col-md-10">
                            @Html.TextBoxFor(model => model.DocUpload, new { @class = "form-control", type = "file", multiple = "multiple", @id = "DocUpload", @required = "required" })
                            @Html.ValidationMessageFor(model => model.DocUpload, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    @*Revert Option Dropdown*@
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary" id="confirm-progress">Submit</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval");
    <script>
        $(document).ready(function () {
            bindload();
            $('#progressModal').modal({
                backdrop: 'static',
                keyboard: false
            });
            $('.close, .btn-secondary').on('click', function () {
                $('#progressModal').modal('hide');
            });
            $('#search-button').on('click', function (e) {
                e.preventDefault();
                bindload();
            });
            $('#confirm-progress').on('click', function () {
                PostData();
            });
        });
       

        function PostData() {
            var formData = new FormData(); // Create a FormData object
            formData.append('GrievanceId_fk', $('#GrievanceId_fk').val());
            formData.append('RevertTypeId', $('#RevertTypeId').val());
            formData.append('TeamRevertMessage', $('#TeamRevertMessage').val());

            // Get the files from the file input
            var files = $('#DocUpload')[0].files;
            for (var i = 0; i < files.length; i++) {
                formData.append('DocUpload', files[i]); // Append each file
            }

            $.ajax({
                type: "POST",
                url: document.baseURI + "/UserCom/UserRevertCPost",
                data: formData,
                contentType: false, // Important for file uploads
                processData: false, // Important for file uploads
                success: function (response) {
                    if (response.success) {
                        toastr.success(response.message);
                        $('#progressModal').modal('hide');
                    } else {
                        toastr.error(response.message);
                    }
                },
                error: function (xhr, status, error) {
                    toastr.error("An error occurred: " + error);
                }
            });
        }
        
        $(document).on('click', '.progress-button', function () {
            var id = $(this).data('id');
            var caseid = $(this).data('caseid');
            var name = $(this).data('name');
            var createdOn = $(this).data('createdon');

            POPDisplay(id, caseid, name, createdOn);
        });

        function POPDisplay(id, caseid, name, CreatedOn) {
            $('#GrievanceId_fk').val(id);
            $('#cname').html(name);
            $('#CId').html(caseid);
            $('#con').html(CreatedOn);
            $('#progressModal').modal('show'); // Ensure this line is present
        }

        function bindload() {
            //debugger;
            $("#subdata").html(''); $('#div-download').empty();
            var filtermodel = new Object();
            filtermodel.StateId = $('#StateId').val() == '' ? '' : $('#StateId').val();
            filtermodel.TypeGId = $('#TypeGId').val() == '' ? '' : $('#TypeGId').val();
            // filtermodel.ToDt = $('#ToDt').val() == '' ? '' : $('#ToDt').val();
            $.ajax({
                type: "Get",
                url: document.baseURI + "/UserCom/GetUserGList",
                data: filtermodel,
                //cache: false,
                success: function (res) {
                    if (res.IsSuccess) {
                        $("#subdata").html(res.Data);

                        //if ($.fn.dataTable.isDataTable('#tbl')) {
                        //    $("#tbl").dataTable().fnDestroy();
                        //}
                        //table = $('#tbl').DataTable({
                        //    //scrollY: "400px",
                        //    //scrollX: true,
                        //    //scrollCollapse: true,
                        //    paging: false,
                        //    "dom": '<"pull-left"f><"pull-right"l>tip',
                        //    //"ordering": false,
                        //    // order: [[1,0, 'desc']],
                        //    // pageLength: 100,
                        //    fixedColumns: {
                        //        leftColumns: 1,
                        //        rightColumns: 1
                        //    },
                        //    buttons: [{
                        //        extend: 'excel', text: '<span><i class="fa fa-download"></i> Download</span>', title: 'Participant Lists',//$('#IDDistrict option:selected').text() +
                        //        className: 'btn btn-primary button-icon mr-3 mt-1 mb-1',
                        //        filename: 'Participant Lists',
                        //        exportOptions: { modifier: { page: 'all' } }
                        //    }],
                        //});
                        //$('.dataTables_filter input[type="search"]').css(
                        //    { 'width': '200px', 'display': 'inline-block' }
                        //);
                        //$('#div-download').empty();
                        //table.buttons().container().appendTo($('#div-download'));
                    }
                    else {
                        $("#subdata").html('<h5>' + res.Data + '</h3>');
                    }
                },
                error: function (req, error) {
                    if (error === 'error') { error = req.statusText; }
                    var errormsg = 'There was a communication error: ' + error;
                    //Do To Message display
                    $("#subdata").html('<h5 class="text-danger">' + errormsg + '</h3>');
                }
            });
        }


    </script>


}