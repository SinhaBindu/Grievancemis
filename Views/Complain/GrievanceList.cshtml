@using Grievancemis.Manager
@*@model Grievancemis.Models.AssignTo*@
@model Grievancemis.Models.FilterModel


@{
    ViewBag.Title = "Complain List";
    ViewBag.SubTitle = "Conversation Details";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<div class="page-header">
    <div class="page-block">
        <div class="page-header-title">
            <h2 class="mb-0">@ViewBag.Title</h2>
            <ul class="breadcrumb">
                @*<li class="breadcrumb-item"><a href="/">Home</a></li>*@
                <li class="breadcrumb-item" aria-current="page">@ViewBag.SubTitle</li>
            </ul>
        </div>
    </div>
</div>

<div class="grievances-list">
    <div class="box-design">
        @using (Html.BeginForm("GetGrievanceList", "Complain", FormMethod.Post, new { @id = "formid", @class = "", role = "form", autocomplete = "off", enctype = "multipart/form-data", noValidate = "novalidate" }))
        {
            <div class="flex-row">
                <div class="form-group">
                    @Html.LabelFor(model => model.StateId, htmlAttributes: new { @class = "control-label" })
                    <span style="color:red;">*</span>
                    @Html.DropDownListFor(model => model.StateId, CommonModel.GetState(), null, new { @class = "form-control", @required = "required" })
                    @Html.ValidationMessageFor(model => model.StateId, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.TypeGId, htmlAttributes: new { @class = "control-label" })
                    <span style="color:red;">*</span>
                    @Html.DropDownListFor(model => model.TypeGId, CommonModel.GetGrievanceType(), null, new { @class = "form-control", @required = "required" })
                    @Html.ValidationMessageFor(model => model.TypeGId, "", new { @class = "text-danger" })
                </div>

                <div class="form-btn">
                    <button id="search-button" class="btn btn-primary">Search</button>
                </div>
            </div>
        }
    </div>
</div>

<div id="subdata"></div>

<div class="modal fade animate" id="progressModal" tabindex="-1" role="dialog" aria-labelledby="myLargeModalLabel" aria-hidden="true"
     data-backdrop="static" data-keyboard="false">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="progressModalLabel">Revert</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <i class="ti ti-x"></i>
                </button>
            </div>
            <div class="modal-body">
                <div class="row">
                    @Html.HiddenFor(x => x.GrievanceId_fk)
                    @Html.HiddenFor(x => x.RevertId)
                    <div class="modal-design">
                        <p>
                            Case Id :
                            <span><strong id="CId"></strong></span>
                        </p>
                        <p>
                            Name:
                            <span><strong id="cname"></strong></span>
                        </p>
                        <p>
                            Complain Date :
                            <span><strong id="con"></strong></span>
                        </p>

                    </div>

                    <div class="form-group mar-bom">
                        @Html.LabelFor(model => model.RevertTypeId, htmlAttributes: new { @class = "control-label" })
                        <span style="color:red;">*</span>
                        @Html.DropDownListFor(model => model.RevertTypeId, CommonModel.GetRevertType(), null, new { @class = "form-control", @required = "required" })
                        @Html.ValidationMessageFor(model => model.RevertTypeId, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group mar-bom">
                        @Html.LabelFor(model => model.TeamRevertMessage, htmlAttributes: new { @class = "control-label col-md-2" })
                        <span style="color:red;">*</span>
                        <div class="col-md-10">
                            @Html.TextAreaFor(model => model.TeamRevertMessage, new { @class = "form-control-input", style = "height:100px;", rows = 5 })
                            @Html.ValidationMessageFor(model => model.TeamRevertMessage, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    @*Revert Option Dropdown*@
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary" id="confirm-progress">Submit</button>
            </div>
        </div>
    </div>
</div>

@*------------Work Assign Model popup---------------------*@

<div class="modal fade animate" id="workAssignModal" tabindex="-1" role="dialog" aria-labelledby="workAssignModalLabel" aria-hidden="true"
     data-backdrop="static" data-keyboard="false">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="workAssignModalLabel">Assign Case To panel member </h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <i class="ti ti-x"></i>
                </button>
            </div>
            <div class="modal-body">
                <div class="row">
                    @Html.HiddenFor(x => x.GrievanceId_fk)
                    <div class="modal-design">
                        <p>
                            Case Id:
                            <span><strong id="assignCaseId"></strong></span>
                        </p>
                        <p>
                            Name:
                            <span><strong id="assignName"></strong></span>
                        </p>
                        <p>
                            Complain Date:
                            <span><strong id="assignCreatedOn"></strong></span>
                        </p>
                    </div>
                    <div class="form-group mar-bom">
                        @Html.LabelFor(model => model.Role_Idfk, htmlAttributes: new { @class = "control-label" })
                        <span style="color:red;">*</span>
                        @Html.DropDownList("Roles", CommonModel.GetpanelList(true), new { @class = "form-control", @multiple = "multiple", @required = "required" })
                        @Html.ValidationMessageFor(model => model.Role_Idfk, "", new { @class = "text-danger" })
                    </div> 
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                <button type="submit" id="confirmWorkAssign" class="btn btn-primary">Submit</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval");
    @*<script src="~/Scripts/JS/Master.js"></script>
        <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.4/css/bootstrap.min.css">
        <script type="text/javascript" src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.4/js/bootstrap.min.js"></script>

        <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-multiselect/0.9.13/js/bootstrap-multiselect.js"></script>
        <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-multiselect/0.9.13/css/bootstrap-multiselect.css">*@
    <script>
        $(document).ready(function () {
            bindload();
            $('#progressModal').modal({
                backdrop: 'static',
                keyboard: false
            });
            $('.close, .btn-secondary').on('click', function () {
                $('#progressModal').modal('hide');
            });
            $('#search-button').on('click', function (e) {
                e.preventDefault();
                bindload();
            });
            $('#confirm-progress').on('click', function () {
                PostData();
            });

            $('#confirmWorkAssign').on('click', function () {
                var grievanceId = $('#GrievanceId_fk').val(); // Get the grievance ID
                var roleIds = $('#Roles').val(); // Get selected roles

                // Validation
                if (!roleIds || roleIds.length === 0) {
                    toastr.error('Please select at least one role');
                    return false;
                }

                // Prepare data for the AJAX request
                var requests = roleIds.map(function (roleId) {
                    return {
                        Grievance_Idfk: grievanceId,
                        Role_Idfk: roleId,
                    };
                });

                $.ajax({
                    type: "POST",
                    url: document.baseURI + "/Complain/AssignWork",
                    data: JSON.stringify(requests), // Send as JSON
                    contentType: "application/json; charset=utf-8", // Set content type
                    success: function (response) {
                        if (response.success) {
                            toastr.success(response.message);
                            $('#workAssignModal').modal('hide');
                        } else {
                            toastr.error(response.message);
                        }
                    },
                    error: function (xhr, status, error) {
                        toastr.error("An error occurred: " + error);
                    }
                });
            });
        });
        // Handle progress button click
        //$(document).on('click', '.progress-button', function () {
        //    $('#progressModal').modal('show animate');
        //});

        function PostData() {
            if ($('#RevertTypeId').val() == '' || $('#RevertTypeId').val() == '0' || $('#RevertTypeId').val() == null) {
                toastr.error('Please Select Revert Type');
                return false;
            }
            if ($('#TeamRevertMessage').val() == '' || $('#TeamRevertMessage').val() == null) {
                toastr.error('Enter the Message');
                return false;
            }
            if (confirm("Are you sure you want to Revert Submitted this?")) {
                var filterModel = {
                    GrievanceId_fk: $('#GrievanceId_fk').val(),
                    RevertTypeId: $('#RevertTypeId').val(),
                    TeamRevertMessage: $('#TeamRevertMessage').val()
                };

                $.ajax({
                    type: "POST",
                    url: document.baseURI + "/Complain/RevertCPost",
                    data: filterModel,
                    success: function (response) {
                        if (response.success) {
                            toastr.success(response.message);
                            $('#progressModal').modal('hide');
                        } else {
                            toastr.error(response.message);
                            if (response.Data == 201) {
                                window.location.href = document.baseURI + "/Grievnce/GrievanceCaseAdd";
                            }
                        }
                    },
                    error: function (xhr, status, error) {
                        toastr.error("An error occurred: " + error);
                    }
                });
            }
            else {
                return false;
            }
        }
        function openWorkAssignPopup(id, caseId, name, createdOn) {
            $('#assignCaseId').html('');
            $('#assignName').html('');
            $('#assignCreatedOn').html('');
            $('#Roles').val('');



            $('#GrievanceId_fk').val(id);
            $('#assignCaseId').html(caseId);
            $('#assignName').html(name);
            $('#assignCreatedOn').html(createdOn);

            $('#workAssignModal').modal('show');
        }
        $('.close, .btn-secondary').on('click', function () {
            $('#workAssignModal').modal('hide');
        });
        $('#Roles').multiselect({
            includeSelectAllOption: true,
        });



        function POPDisplay(id, caseid, name, CreatedOn, RevertId) {
            //debugger;
            $('#GrievanceId_fk').val(''); $('#RevertId').val('');
            $('#RevertTypeId').val(''); $('#TeamRevertMessage').val('');
            if (id != null && id != '') {
                $('#GrievanceId_fk').val(id);
                $('#RevertId').val(RevertId);
                $('#cname').html(name);
                $('#CId').html(caseid);
                $('#con').html(CreatedOn);
                $('#progressModal').modal('show');
            }
            else {
                window.location.href = document.baseURI + "/Grievnce/GrievanceCaseAdd";
            }
        }

        function bindload() {
            //debugger;
            $("#subdata").html(''); $('#div-download').empty();
            var filtermodel = new Object();
            filtermodel.StateId = $('#StateId').val() == '' ? '' : $('#StateId').val();
            filtermodel.TypeGId = $('#TypeGId').val() == '' ? '' : $('#TypeGId').val();
            // filtermodel.ToDt = $('#ToDt').val() == '' ? '' : $('#ToDt').val();
            $.ajax({
                type: "Get",
                url: document.baseURI + "/Complain/GetGrievanceList",
                data: filtermodel,
                //cache: false,
                success: function (res) {
                    if (res.IsSuccess) {
                        $("#subdata").html(res.Data);

                        //if ($.fn.dataTable.isDataTable('#tbl')) {
                        //    $("#tbl").dataTable().fnDestroy();
                        //}
                        //table = $('#tbl').DataTable({
                        //    //scrollY: "400px",
                        //    //scrollX: true,
                        //    //scrollCollapse: true,
                        //    paging: false,
                        //    "dom": '<"pull-left"f><"pull-right"l>tip',
                        //    //"ordering": false,
                        //    // order: [[1,0, 'desc']],
                        //    // pageLength: 100,
                        //    fixedColumns: {
                        //        leftColumns: 1,
                        //        rightColumns: 1
                        //    },
                        //    buttons: [{
                        //        extend: 'excel', text: '<span><i class="fa fa-download"></i> Download</span>', title: 'Participant Lists',//$('#IDDistrict option:selected').text() +
                        //        className: 'btn btn-primary button-icon mr-3 mt-1 mb-1',
                        //        filename: 'Participant Lists',
                        //        exportOptions: { modifier: { page: 'all' } }
                        //    }],
                        //});
                        //$('.dataTables_filter input[type="search"]').css(
                        //    { 'width': '200px', 'display': 'inline-block' }
                        //);
                        //$('#div-download').empty();
                        //table.buttons().container().appendTo($('#div-download'));
                    }
                    else {
                        $("#subdata").html('<h5 class="text-danger">' + res.Data + '</h3>');
                    }
                },
                error: function (req, error) {
                    if (error === 'error') { error = req.statusText; }
                    var errormsg = 'There was a communication error: ' + error;
                    //Do To Message display
                    $("#subdata").html('<h5 class="text-danger">' + errormsg + '</h3>');
                }
            });
        }


    </script>


}
